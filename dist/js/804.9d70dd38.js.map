{"version":3,"file":"js/804.9d70dd38.js","mappings":"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","sources":["webpack://orbital_v_bookitnus/./node_modules/@firebase/app-compat/dist/esm/index.esm2017.js","webpack://orbital_v_bookitnus/./node_modules/@firebase/auth/dist/esm2017/internal.js","webpack://orbital_v_bookitnus/./node_modules/@firebase/auth-compat/dist/index.esm2017.js"],"sourcesContent":["import { ErrorFactory, contains, deepExtend, createSubscribe, isBrowser } from '@firebase/util';\nimport { Component } from '@firebase/component';\nimport * as modularAPIs from '@firebase/app';\nimport { _addComponent, deleteApp, _DEFAULT_ENTRY_NAME, _addOrOverwriteComponent, registerVersion } from '@firebase/app';\nimport { Logger } from '@firebase/logger';\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Global context object for a collection of services using\r\n * a shared authentication state.\r\n *\r\n * marked as internal because it references internal types exported from @firebase/app\r\n * @internal\r\n */\r\nclass FirebaseAppImpl {\r\n    constructor(_delegate, firebase) {\r\n        this._delegate = _delegate;\r\n        this.firebase = firebase;\r\n        // add itself to container\r\n        _addComponent(_delegate, new Component('app-compat', () => this, \"PUBLIC\" /* PUBLIC */));\r\n        this.container = _delegate.container;\r\n    }\r\n    get automaticDataCollectionEnabled() {\r\n        return this._delegate.automaticDataCollectionEnabled;\r\n    }\r\n    set automaticDataCollectionEnabled(val) {\r\n        this._delegate.automaticDataCollectionEnabled = val;\r\n    }\r\n    get name() {\r\n        return this._delegate.name;\r\n    }\r\n    get options() {\r\n        return this._delegate.options;\r\n    }\r\n    delete() {\r\n        return new Promise(resolve => {\r\n            this._delegate.checkDestroyed();\r\n            resolve();\r\n        }).then(() => {\r\n            this.firebase.INTERNAL.removeApp(this.name);\r\n            return deleteApp(this._delegate);\r\n        });\r\n    }\r\n    /**\r\n     * Return a service instance associated with this app (creating it\r\n     * on demand), identified by the passed instanceIdentifier.\r\n     *\r\n     * NOTE: Currently storage and functions are the only ones that are leveraging this\r\n     * functionality. They invoke it by calling:\r\n     *\r\n     * ```javascript\r\n     * firebase.app().storage('STORAGE BUCKET ID')\r\n     * ```\r\n     *\r\n     * The service name is passed to this already\r\n     * @internal\r\n     */\r\n    _getService(name, instanceIdentifier = _DEFAULT_ENTRY_NAME) {\r\n        var _a;\r\n        this._delegate.checkDestroyed();\r\n        // Initialize instance if InstatiationMode is `EXPLICIT`.\r\n        const provider = this._delegate.container.getProvider(name);\r\n        if (!provider.isInitialized() &&\r\n            ((_a = provider.getComponent()) === null || _a === void 0 ? void 0 : _a.instantiationMode) === \"EXPLICIT\" /* EXPLICIT */) {\r\n            provider.initialize();\r\n        }\r\n        // getImmediate will always succeed because _getService is only called for registered components.\r\n        return provider.getImmediate({\r\n            identifier: instanceIdentifier\r\n        });\r\n    }\r\n    /**\r\n     * Remove a service instance from the cache, so we will create a new instance for this service\r\n     * when people try to get it again.\r\n     *\r\n     * NOTE: currently only firestore uses this functionality to support firestore shutdown.\r\n     *\r\n     * @param name The service name\r\n     * @param instanceIdentifier instance identifier in case multiple instances are allowed\r\n     * @internal\r\n     */\r\n    _removeServiceInstance(name, instanceIdentifier = _DEFAULT_ENTRY_NAME) {\r\n        this._delegate.container\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            .getProvider(name)\r\n            .clearInstance(instanceIdentifier);\r\n    }\r\n    /**\r\n     * @param component the component being added to this app's container\r\n     * @internal\r\n     */\r\n    _addComponent(component) {\r\n        _addComponent(this._delegate, component);\r\n    }\r\n    _addOrOverwriteComponent(component) {\r\n        _addOrOverwriteComponent(this._delegate, component);\r\n    }\r\n    toJSON() {\r\n        return {\r\n            name: this.name,\r\n            automaticDataCollectionEnabled: this.automaticDataCollectionEnabled,\r\n            options: this.options\r\n        };\r\n    }\r\n}\r\n// TODO: investigate why the following needs to be commented out\r\n// Prevent dead-code elimination of these methods w/o invalid property\r\n// copying.\r\n// (FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\r\n//   FirebaseAppImpl.prototype.delete ||\r\n//   console.log('dc');\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst ERRORS = {\r\n    [\"no-app\" /* NO_APP */]: \"No Firebase App '{$appName}' has been created - \" +\r\n        'call Firebase App.initializeApp()',\r\n    [\"invalid-app-argument\" /* INVALID_APP_ARGUMENT */]: 'firebase.{$appName}() takes either no argument or a ' +\r\n        'Firebase App instance.'\r\n};\r\nconst ERROR_FACTORY = new ErrorFactory('app-compat', 'Firebase', ERRORS);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Because auth can't share code with other components, we attach the utility functions\r\n * in an internal namespace to share code.\r\n * This function return a firebase namespace object without\r\n * any utility functions, so it can be shared between the regular firebaseNamespace and\r\n * the lite version.\r\n */\r\nfunction createFirebaseNamespaceCore(firebaseAppImpl) {\r\n    const apps = {};\r\n    // // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    // const components = new Map<string, Component<any>>();\r\n    // A namespace is a plain JavaScript Object.\r\n    const namespace = {\r\n        // Hack to prevent Babel from modifying the object returned\r\n        // as the firebase namespace.\r\n        // @ts-ignore\r\n        __esModule: true,\r\n        initializeApp: initializeAppCompat,\r\n        // @ts-ignore\r\n        app,\r\n        registerVersion: modularAPIs.registerVersion,\r\n        setLogLevel: modularAPIs.setLogLevel,\r\n        onLog: modularAPIs.onLog,\r\n        // @ts-ignore\r\n        apps: null,\r\n        SDK_VERSION: modularAPIs.SDK_VERSION,\r\n        INTERNAL: {\r\n            registerComponent: registerComponentCompat,\r\n            removeApp,\r\n            useAsService,\r\n            modularAPIs\r\n        }\r\n    };\r\n    // Inject a circular default export to allow Babel users who were previously\r\n    // using:\r\n    //\r\n    //   import firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase').default;\r\n    //\r\n    // instead of\r\n    //\r\n    //   import * as firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase');\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    namespace['default'] = namespace;\r\n    // firebase.apps is a read-only getter.\r\n    Object.defineProperty(namespace, 'apps', {\r\n        get: getApps\r\n    });\r\n    /**\r\n     * Called by App.delete() - but before any services associated with the App\r\n     * are deleted.\r\n     */\r\n    function removeApp(name) {\r\n        delete apps[name];\r\n    }\r\n    /**\r\n     * Get the App object for a given name (or DEFAULT).\r\n     */\r\n    function app(name) {\r\n        name = name || modularAPIs._DEFAULT_ENTRY_NAME;\r\n        if (!contains(apps, name)) {\r\n            throw ERROR_FACTORY.create(\"no-app\" /* NO_APP */, { appName: name });\r\n        }\r\n        return apps[name];\r\n    }\r\n    // @ts-ignore\r\n    app['App'] = firebaseAppImpl;\r\n    /**\r\n     * Create a new App instance (name must be unique).\r\n     *\r\n     * This function is idempotent. It can be called more than once and return the same instance using the same options and config.\r\n     */\r\n    function initializeAppCompat(options, rawConfig = {}) {\r\n        const app = modularAPIs.initializeApp(options, rawConfig);\r\n        if (contains(apps, app.name)) {\r\n            return apps[app.name];\r\n        }\r\n        const appCompat = new firebaseAppImpl(app, namespace);\r\n        apps[app.name] = appCompat;\r\n        return appCompat;\r\n    }\r\n    /*\r\n     * Return an array of all the non-deleted FirebaseApps.\r\n     */\r\n    function getApps() {\r\n        // Make a copy so caller cannot mutate the apps list.\r\n        return Object.keys(apps).map(name => apps[name]);\r\n    }\r\n    function registerComponentCompat(component) {\r\n        const componentName = component.name;\r\n        const componentNameWithoutCompat = componentName.replace('-compat', '');\r\n        if (modularAPIs._registerComponent(component) &&\r\n            component.type === \"PUBLIC\" /* PUBLIC */) {\r\n            // create service namespace for public components\r\n            // The Service namespace is an accessor function ...\r\n            const serviceNamespace = (appArg = app()) => {\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                if (typeof appArg[componentNameWithoutCompat] !== 'function') {\r\n                    // Invalid argument.\r\n                    // This happens in the following case: firebase.storage('gs:/')\r\n                    throw ERROR_FACTORY.create(\"invalid-app-argument\" /* INVALID_APP_ARGUMENT */, {\r\n                        appName: componentName\r\n                    });\r\n                }\r\n                // Forward service instance lookup to the FirebaseApp.\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                return appArg[componentNameWithoutCompat]();\r\n            };\r\n            // ... and a container for service-level properties.\r\n            if (component.serviceProps !== undefined) {\r\n                deepExtend(serviceNamespace, component.serviceProps);\r\n            }\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            namespace[componentNameWithoutCompat] = serviceNamespace;\r\n            // Patch the FirebaseAppImpl prototype\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            firebaseAppImpl.prototype[componentNameWithoutCompat] =\r\n                // TODO: The eslint disable can be removed and the 'ignoreRestArgs'\r\n                // option added to the no-explicit-any rule when ESlint releases it.\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                function (...args) {\r\n                    const serviceFxn = this._getService.bind(this, componentName);\r\n                    return serviceFxn.apply(this, component.multipleInstances ? args : []);\r\n                };\r\n        }\r\n        return component.type === \"PUBLIC\" /* PUBLIC */\r\n            ? // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                namespace[componentNameWithoutCompat]\r\n            : null;\r\n    }\r\n    // Map the requested service to a registered service name\r\n    // (used to map auth to serverAuth service when needed).\r\n    function useAsService(app, name) {\r\n        if (name === 'serverAuth') {\r\n            return null;\r\n        }\r\n        const useService = name;\r\n        return useService;\r\n    }\r\n    return namespace;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Return a firebase namespace object.\r\n *\r\n * In production, this will be called exactly once and the result\r\n * assigned to the 'firebase' global.  It may be called multiple times\r\n * in unit tests.\r\n */\r\nfunction createFirebaseNamespace() {\r\n    const namespace = createFirebaseNamespaceCore(FirebaseAppImpl);\r\n    namespace.INTERNAL = Object.assign(Object.assign({}, namespace.INTERNAL), { createFirebaseNamespace,\r\n        extendNamespace,\r\n        createSubscribe,\r\n        ErrorFactory,\r\n        deepExtend });\r\n    /**\r\n     * Patch the top-level firebase namespace with additional properties.\r\n     *\r\n     * firebase.INTERNAL.extendNamespace()\r\n     */\r\n    function extendNamespace(props) {\r\n        deepExtend(namespace, props);\r\n    }\r\n    return namespace;\r\n}\r\nconst firebase$1 = createFirebaseNamespace();\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst logger = new Logger('@firebase/app-compat');\n\nconst name = \"@firebase/app-compat\";\nconst version = \"0.1.27\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerCoreComponents(variant) {\r\n    // Register `app` package.\r\n    registerVersion(name, version, variant);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Firebase Lite detection\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nif (isBrowser() && self.firebase !== undefined) {\r\n    logger.warn(`\n    Warning: Firebase is already defined in the global scope. Please make sure\n    Firebase library is only loaded once.\n  `);\r\n    // eslint-disable-next-line\r\n    const sdkVersion = self.firebase.SDK_VERSION;\r\n    if (sdkVersion && sdkVersion.indexOf('LITE') >= 0) {\r\n        logger.warn(`\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\n    `);\r\n    }\r\n}\r\nconst firebase = firebase$1;\r\nregisterCoreComponents();\n\nexport { firebase as default };\n//# sourceMappingURL=index.esm2017.js.map\n","import { ap as _isIOS7Or8, aq as debugAssert, ar as _isIOS, as as _isAndroid, at as _fail, au as _getRedirectUrl, av as _getProjectConfig, aw as _createError, ax as _assert, ay as _getInstance, b as browserLocalPersistence, az as _persistenceKeyName, aA as AuthEventManager, a as browserSessionPersistence, aB as _getRedirectResult, aC as _overrideRedirectResult, aD as _clearRedirectOutcomes, aE as _castAuth } from './index-69ab4e3a.js';\nexport { A as ActionCodeOperation, ad as ActionCodeURL, H as AuthCredential, D as AuthErrorCodes, aG as AuthImpl, aJ as AuthPopup, I as EmailAuthCredential, M as EmailAuthProvider, N as FacebookAuthProvider, F as FactorId, aK as FetchProvider, T as GithubAuthProvider, Q as GoogleAuthProvider, J as OAuthCredential, U as OAuthProvider, O as OperationType, K as PhoneAuthCredential, P as PhoneAuthProvider, m as PhoneMultiFactorGenerator, o as ProviderId, R as RecaptchaVerifier, aL as SAMLAuthCredential, V as SAMLAuthProvider, S as SignInMethod, W as TwitterAuthProvider, aF as UserImpl, ax as _assert, aE as _castAuth, at as _fail, aI as _generateEventId, aH as _getClientVersion, ay as _getInstance, aB as _getRedirectResult, aC as _overrideRedirectResult, az as _persistenceKeyName, a2 as applyActionCode, t as beforeAuthStateChanged, b as browserLocalPersistence, k as browserPopupRedirectResolver, a as browserSessionPersistence, a3 as checkActionCode, a1 as confirmPasswordReset, G as connectAuthEmulator, a5 as createUserWithEmailAndPassword, B as debugErrorMap, z as deleteUser, aa as fetchSignInMethodsForEmail, al as getAdditionalUserInfo, n as getAuth, ai as getIdToken, aj as getIdTokenResult, an as getMultiFactorResolver, j as getRedirectResult, L as inMemoryPersistence, i as indexedDBLocalPersistence, E as initializeAuth, a8 as isSignInWithEmailLink, Z as linkWithCredential, l as linkWithPhoneNumber, d as linkWithPopup, g as linkWithRedirect, ao as multiFactor, v as onAuthStateChanged, q as onIdTokenChanged, ae as parseActionCodeURL, C as prodErrorMap, _ as reauthenticateWithCredential, r as reauthenticateWithPhoneNumber, e as reauthenticateWithPopup, h as reauthenticateWithRedirect, am as reload, ab as sendEmailVerification, a0 as sendPasswordResetEmail, a7 as sendSignInLinkToEmail, p as setPersistence, X as signInAnonymously, Y as signInWithCredential, $ as signInWithCustomToken, a6 as signInWithEmailAndPassword, a9 as signInWithEmailLink, s as signInWithPhoneNumber, c as signInWithPopup, f as signInWithRedirect, y as signOut, ak as unlink, x as updateCurrentUser, ag as updateEmail, ah as updatePassword, u as updatePhoneNumber, af as updateProfile, w as useDeviceLanguage, ac as verifyBeforeUpdateEmail, a4 as verifyPasswordResetCode } from './index-69ab4e3a.js';\nimport { querystringDecode } from '@firebase/util';\nimport '@firebase/app';\nimport 'tslib';\nimport '@firebase/logger';\nimport '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction _cordovaWindow() {\r\n    return window;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * How long to wait after the app comes back into focus before concluding that\r\n * the user closed the sign in tab.\r\n */\r\nconst REDIRECT_TIMEOUT_MS = 2000;\r\n/**\r\n * Generates the URL for the OAuth handler.\r\n */\r\nasync function _generateHandlerUrl(auth, event, provider) {\r\n    var _a;\r\n    // Get the cordova plugins\r\n    const { BuildInfo } = _cordovaWindow();\r\n    debugAssert(event.sessionId, 'AuthEvent did not contain a session ID');\r\n    const sessionDigest = await computeSha256(event.sessionId);\r\n    const additionalParams = {};\r\n    if (_isIOS()) {\r\n        // iOS app identifier\r\n        additionalParams['ibi'] = BuildInfo.packageName;\r\n    }\r\n    else if (_isAndroid()) {\r\n        // Android app identifier\r\n        additionalParams['apn'] = BuildInfo.packageName;\r\n    }\r\n    else {\r\n        _fail(auth, \"operation-not-supported-in-this-environment\" /* OPERATION_NOT_SUPPORTED */);\r\n    }\r\n    // Add the display name if available\r\n    if (BuildInfo.displayName) {\r\n        additionalParams['appDisplayName'] = BuildInfo.displayName;\r\n    }\r\n    // Attached the hashed session ID\r\n    additionalParams['sessionId'] = sessionDigest;\r\n    return _getRedirectUrl(auth, provider, event.type, undefined, (_a = event.eventId) !== null && _a !== void 0 ? _a : undefined, additionalParams);\r\n}\r\n/**\r\n * Validates that this app is valid for this project configuration\r\n */\r\nasync function _validateOrigin(auth) {\r\n    const { BuildInfo } = _cordovaWindow();\r\n    const request = {};\r\n    if (_isIOS()) {\r\n        request.iosBundleId = BuildInfo.packageName;\r\n    }\r\n    else if (_isAndroid()) {\r\n        request.androidPackageName = BuildInfo.packageName;\r\n    }\r\n    else {\r\n        _fail(auth, \"operation-not-supported-in-this-environment\" /* OPERATION_NOT_SUPPORTED */);\r\n    }\r\n    // Will fail automatically if package name is not authorized\r\n    await _getProjectConfig(auth, request);\r\n}\r\nfunction _performRedirect(handlerUrl) {\r\n    // Get the cordova plugins\r\n    const { cordova } = _cordovaWindow();\r\n    return new Promise(resolve => {\r\n        cordova.plugins.browsertab.isAvailable(browserTabIsAvailable => {\r\n            let iabRef = null;\r\n            if (browserTabIsAvailable) {\r\n                cordova.plugins.browsertab.openUrl(handlerUrl);\r\n            }\r\n            else {\r\n                // TODO: Return the inappbrowser ref that's returned from the open call\r\n                iabRef = cordova.InAppBrowser.open(handlerUrl, _isIOS7Or8() ? '_blank' : '_system', 'location=yes');\r\n            }\r\n            resolve(iabRef);\r\n        });\r\n    });\r\n}\r\n/**\r\n * This function waits for app activity to be seen before resolving. It does\r\n * this by attaching listeners to various dom events. Once the app is determined\r\n * to be visible, this promise resolves. AFTER that resolution, the listeners\r\n * are detached and any browser tabs left open will be closed.\r\n */\r\nasync function _waitForAppResume(auth, eventListener, iabRef) {\r\n    // Get the cordova plugins\r\n    const { cordova } = _cordovaWindow();\r\n    let cleanup = () => { };\r\n    try {\r\n        await new Promise((resolve, reject) => {\r\n            let onCloseTimer = null;\r\n            // DEFINE ALL THE CALLBACKS =====\r\n            function authEventSeen() {\r\n                var _a;\r\n                // Auth event was detected. Resolve this promise and close the extra\r\n                // window if it's still open.\r\n                resolve();\r\n                const closeBrowserTab = (_a = cordova.plugins.browsertab) === null || _a === void 0 ? void 0 : _a.close;\r\n                if (typeof closeBrowserTab === 'function') {\r\n                    closeBrowserTab();\r\n                }\r\n                // Close inappbrowser emebedded webview in iOS7 and 8 case if still\r\n                // open.\r\n                if (typeof (iabRef === null || iabRef === void 0 ? void 0 : iabRef.close) === 'function') {\r\n                    iabRef.close();\r\n                }\r\n            }\r\n            function resumed() {\r\n                if (onCloseTimer) {\r\n                    // This code already ran; do not rerun.\r\n                    return;\r\n                }\r\n                onCloseTimer = window.setTimeout(() => {\r\n                    // Wait two seeconds after resume then reject.\r\n                    reject(_createError(auth, \"redirect-cancelled-by-user\" /* REDIRECT_CANCELLED_BY_USER */));\r\n                }, REDIRECT_TIMEOUT_MS);\r\n            }\r\n            function visibilityChanged() {\r\n                if ((document === null || document === void 0 ? void 0 : document.visibilityState) === 'visible') {\r\n                    resumed();\r\n                }\r\n            }\r\n            // ATTACH ALL THE LISTENERS =====\r\n            // Listen for the auth event\r\n            eventListener.addPassiveListener(authEventSeen);\r\n            // Listen for resume and visibility events\r\n            document.addEventListener('resume', resumed, false);\r\n            if (_isAndroid()) {\r\n                document.addEventListener('visibilitychange', visibilityChanged, false);\r\n            }\r\n            // SETUP THE CLEANUP FUNCTION =====\r\n            cleanup = () => {\r\n                eventListener.removePassiveListener(authEventSeen);\r\n                document.removeEventListener('resume', resumed, false);\r\n                document.removeEventListener('visibilitychange', visibilityChanged, false);\r\n                if (onCloseTimer) {\r\n                    window.clearTimeout(onCloseTimer);\r\n                }\r\n            };\r\n        });\r\n    }\r\n    finally {\r\n        cleanup();\r\n    }\r\n}\r\n/**\r\n * Checks the configuration of the Cordova environment. This has no side effect\r\n * if the configuration is correct; otherwise it throws an error with the\r\n * missing plugin.\r\n */\r\nfunction _checkCordovaConfiguration(auth) {\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\r\n    const win = _cordovaWindow();\r\n    // Check all dependencies installed.\r\n    // https://github.com/nordnet/cordova-universal-links-plugin\r\n    // Note that cordova-universal-links-plugin has been abandoned.\r\n    // A fork with latest fixes is available at:\r\n    // https://www.npmjs.com/package/cordova-universal-links-plugin-fix\r\n    _assert(typeof ((_a = win === null || win === void 0 ? void 0 : win.universalLinks) === null || _a === void 0 ? void 0 : _a.subscribe) === 'function', auth, \"invalid-cordova-configuration\" /* INVALID_CORDOVA_CONFIGURATION */, {\r\n        missingPlugin: 'cordova-universal-links-plugin-fix'\r\n    });\r\n    // https://www.npmjs.com/package/cordova-plugin-buildinfo\r\n    _assert(typeof ((_b = win === null || win === void 0 ? void 0 : win.BuildInfo) === null || _b === void 0 ? void 0 : _b.packageName) !== 'undefined', auth, \"invalid-cordova-configuration\" /* INVALID_CORDOVA_CONFIGURATION */, {\r\n        missingPlugin: 'cordova-plugin-buildInfo'\r\n    });\r\n    // https://github.com/google/cordova-plugin-browsertab\r\n    _assert(typeof ((_e = (_d = (_c = win === null || win === void 0 ? void 0 : win.cordova) === null || _c === void 0 ? void 0 : _c.plugins) === null || _d === void 0 ? void 0 : _d.browsertab) === null || _e === void 0 ? void 0 : _e.openUrl) === 'function', auth, \"invalid-cordova-configuration\" /* INVALID_CORDOVA_CONFIGURATION */, {\r\n        missingPlugin: 'cordova-plugin-browsertab'\r\n    });\r\n    _assert(typeof ((_h = (_g = (_f = win === null || win === void 0 ? void 0 : win.cordova) === null || _f === void 0 ? void 0 : _f.plugins) === null || _g === void 0 ? void 0 : _g.browsertab) === null || _h === void 0 ? void 0 : _h.isAvailable) === 'function', auth, \"invalid-cordova-configuration\" /* INVALID_CORDOVA_CONFIGURATION */, {\r\n        missingPlugin: 'cordova-plugin-browsertab'\r\n    });\r\n    // https://cordova.apache.org/docs/en/latest/reference/cordova-plugin-inappbrowser/\r\n    _assert(typeof ((_k = (_j = win === null || win === void 0 ? void 0 : win.cordova) === null || _j === void 0 ? void 0 : _j.InAppBrowser) === null || _k === void 0 ? void 0 : _k.open) === 'function', auth, \"invalid-cordova-configuration\" /* INVALID_CORDOVA_CONFIGURATION */, {\r\n        missingPlugin: 'cordova-plugin-inappbrowser'\r\n    });\r\n}\r\n/**\r\n * Computes the SHA-256 of a session ID. The SubtleCrypto interface is only\r\n * available in \"secure\" contexts, which covers Cordova (which is served on a file\r\n * protocol).\r\n */\r\nasync function computeSha256(sessionId) {\r\n    const bytes = stringToArrayBuffer(sessionId);\r\n    // TODO: For IE11 crypto has a different name and this operation comes back\r\n    //       as an object, not a promise. This is the old proposed standard that\r\n    //       is used by IE11:\r\n    // https://www.w3.org/TR/2013/WD-WebCryptoAPI-20130108/#cryptooperation-interface\r\n    const buf = await crypto.subtle.digest('SHA-256', bytes);\r\n    const arr = Array.from(new Uint8Array(buf));\r\n    return arr.map(num => num.toString(16).padStart(2, '0')).join('');\r\n}\r\nfunction stringToArrayBuffer(str) {\r\n    // This function is only meant to deal with an ASCII charset and makes\r\n    // certain simplifying assumptions.\r\n    debugAssert(/[0-9a-zA-Z]+/.test(str), 'Can only convert alpha-numeric strings');\r\n    if (typeof TextEncoder !== 'undefined') {\r\n        return new TextEncoder().encode(str);\r\n    }\r\n    const buff = new ArrayBuffer(str.length);\r\n    const view = new Uint8Array(buff);\r\n    for (let i = 0; i < str.length; i++) {\r\n        view[i] = str.charCodeAt(i);\r\n    }\r\n    return view;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst SESSION_ID_LENGTH = 20;\r\n/** Custom AuthEventManager that adds passive listeners to events */\r\nclass CordovaAuthEventManager extends AuthEventManager {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.passiveListeners = new Set();\r\n        this.initPromise = new Promise(resolve => {\r\n            this.resolveInialized = resolve;\r\n        });\r\n    }\r\n    addPassiveListener(cb) {\r\n        this.passiveListeners.add(cb);\r\n    }\r\n    removePassiveListener(cb) {\r\n        this.passiveListeners.delete(cb);\r\n    }\r\n    // In a Cordova environment, this manager can live through multiple redirect\r\n    // operations\r\n    resetRedirect() {\r\n        this.queuedRedirectEvent = null;\r\n        this.hasHandledPotentialRedirect = false;\r\n    }\r\n    /** Override the onEvent method */\r\n    onEvent(event) {\r\n        this.resolveInialized();\r\n        this.passiveListeners.forEach(cb => cb(event));\r\n        return super.onEvent(event);\r\n    }\r\n    async initialized() {\r\n        await this.initPromise;\r\n    }\r\n}\r\n/**\r\n * Generates a (partial) {@link AuthEvent}.\r\n */\r\nfunction _generateNewEvent(auth, type, eventId = null) {\r\n    return {\r\n        type,\r\n        eventId,\r\n        urlResponse: null,\r\n        sessionId: generateSessionId(),\r\n        postBody: null,\r\n        tenantId: auth.tenantId,\r\n        error: _createError(auth, \"no-auth-event\" /* NO_AUTH_EVENT */)\r\n    };\r\n}\r\nfunction _savePartialEvent(auth, event) {\r\n    return storage()._set(persistenceKey(auth), event);\r\n}\r\nasync function _getAndRemoveEvent(auth) {\r\n    const event = (await storage()._get(persistenceKey(auth)));\r\n    if (event) {\r\n        await storage()._remove(persistenceKey(auth));\r\n    }\r\n    return event;\r\n}\r\nfunction _eventFromPartialAndUrl(partialEvent, url) {\r\n    var _a, _b;\r\n    // Parse the deep link within the dynamic link URL.\r\n    const callbackUrl = _getDeepLinkFromCallback(url);\r\n    // Confirm it is actually a callback URL.\r\n    // Currently the universal link will be of this format:\r\n    // https://<AUTH_DOMAIN>/__/auth/callback<OAUTH_RESPONSE>\r\n    // This is a fake URL but is not intended to take the user anywhere\r\n    // and just redirect to the app.\r\n    if (callbackUrl.includes('/__/auth/callback')) {\r\n        // Check if there is an error in the URL.\r\n        // This mechanism is also used to pass errors back to the app:\r\n        // https://<AUTH_DOMAIN>/__/auth/callback?firebaseError=<STRINGIFIED_ERROR>\r\n        const params = searchParamsOrEmpty(callbackUrl);\r\n        // Get the error object corresponding to the stringified error if found.\r\n        const errorObject = params['firebaseError']\r\n            ? parseJsonOrNull(decodeURIComponent(params['firebaseError']))\r\n            : null;\r\n        const code = (_b = (_a = errorObject === null || errorObject === void 0 ? void 0 : errorObject['code']) === null || _a === void 0 ? void 0 : _a.split('auth/')) === null || _b === void 0 ? void 0 : _b[1];\r\n        const error = code ? _createError(code) : null;\r\n        if (error) {\r\n            return {\r\n                type: partialEvent.type,\r\n                eventId: partialEvent.eventId,\r\n                tenantId: partialEvent.tenantId,\r\n                error,\r\n                urlResponse: null,\r\n                sessionId: null,\r\n                postBody: null\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                type: partialEvent.type,\r\n                eventId: partialEvent.eventId,\r\n                tenantId: partialEvent.tenantId,\r\n                sessionId: partialEvent.sessionId,\r\n                urlResponse: callbackUrl,\r\n                postBody: null\r\n            };\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction generateSessionId() {\r\n    const chars = [];\r\n    const allowedChars = '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n    for (let i = 0; i < SESSION_ID_LENGTH; i++) {\r\n        const idx = Math.floor(Math.random() * allowedChars.length);\r\n        chars.push(allowedChars.charAt(idx));\r\n    }\r\n    return chars.join('');\r\n}\r\nfunction storage() {\r\n    return _getInstance(browserLocalPersistence);\r\n}\r\nfunction persistenceKey(auth) {\r\n    return _persistenceKeyName(\"authEvent\" /* AUTH_EVENT */, auth.config.apiKey, auth.name);\r\n}\r\nfunction parseJsonOrNull(json) {\r\n    try {\r\n        return JSON.parse(json);\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n}\r\n// Exported for testing\r\nfunction _getDeepLinkFromCallback(url) {\r\n    const params = searchParamsOrEmpty(url);\r\n    const link = params['link'] ? decodeURIComponent(params['link']) : undefined;\r\n    // Double link case (automatic redirect)\r\n    const doubleDeepLink = searchParamsOrEmpty(link)['link'];\r\n    // iOS custom scheme links.\r\n    const iOSDeepLink = params['deep_link_id']\r\n        ? decodeURIComponent(params['deep_link_id'])\r\n        : undefined;\r\n    const iOSDoubleDeepLink = searchParamsOrEmpty(iOSDeepLink)['link'];\r\n    return iOSDoubleDeepLink || iOSDeepLink || doubleDeepLink || link || url;\r\n}\r\n/**\r\n * Optimistically tries to get search params from a string, or else returns an\r\n * empty search params object.\r\n */\r\nfunction searchParamsOrEmpty(url) {\r\n    if (!(url === null || url === void 0 ? void 0 : url.includes('?'))) {\r\n        return {};\r\n    }\r\n    const [_, ...rest] = url.split('?');\r\n    return querystringDecode(rest.join('?'));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * How long to wait for the initial auth event before concluding no\r\n * redirect pending\r\n */\r\nconst INITIAL_EVENT_TIMEOUT_MS = 500;\r\nclass CordovaPopupRedirectResolver {\r\n    constructor() {\r\n        this._redirectPersistence = browserSessionPersistence;\r\n        this._shouldInitProactively = true; // This is lightweight for Cordova\r\n        this.eventManagers = new Map();\r\n        this.originValidationPromises = {};\r\n        this._completeRedirectFn = _getRedirectResult;\r\n        this._overrideRedirectResult = _overrideRedirectResult;\r\n    }\r\n    async _initialize(auth) {\r\n        const key = auth._key();\r\n        let manager = this.eventManagers.get(key);\r\n        if (!manager) {\r\n            manager = new CordovaAuthEventManager(auth);\r\n            this.eventManagers.set(key, manager);\r\n            this.attachCallbackListeners(auth, manager);\r\n        }\r\n        return manager;\r\n    }\r\n    _openPopup(auth) {\r\n        _fail(auth, \"operation-not-supported-in-this-environment\" /* OPERATION_NOT_SUPPORTED */);\r\n    }\r\n    async _openRedirect(auth, provider, authType, eventId) {\r\n        _checkCordovaConfiguration(auth);\r\n        const manager = await this._initialize(auth);\r\n        await manager.initialized();\r\n        // Reset the persisted redirect states. This does not matter on Web where\r\n        // the redirect always blows away application state entirely. On Cordova,\r\n        // the app maintains control flow through the redirect.\r\n        manager.resetRedirect();\r\n        _clearRedirectOutcomes();\r\n        await this._originValidation(auth);\r\n        const event = _generateNewEvent(auth, authType, eventId);\r\n        await _savePartialEvent(auth, event);\r\n        const url = await _generateHandlerUrl(auth, event, provider);\r\n        const iabRef = await _performRedirect(url);\r\n        return _waitForAppResume(auth, manager, iabRef);\r\n    }\r\n    _isIframeWebStorageSupported(_auth, _cb) {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n    _originValidation(auth) {\r\n        const key = auth._key();\r\n        if (!this.originValidationPromises[key]) {\r\n            this.originValidationPromises[key] = _validateOrigin(auth);\r\n        }\r\n        return this.originValidationPromises[key];\r\n    }\r\n    attachCallbackListeners(auth, manager) {\r\n        // Get the global plugins\r\n        const { universalLinks, handleOpenURL, BuildInfo } = _cordovaWindow();\r\n        const noEventTimeout = setTimeout(async () => {\r\n            // We didn't see that initial event. Clear any pending object and\r\n            // dispatch no event\r\n            await _getAndRemoveEvent(auth);\r\n            manager.onEvent(generateNoEvent());\r\n        }, INITIAL_EVENT_TIMEOUT_MS);\r\n        const universalLinksCb = async (eventData) => {\r\n            // We have an event so we can clear the no event timeout\r\n            clearTimeout(noEventTimeout);\r\n            const partialEvent = await _getAndRemoveEvent(auth);\r\n            let finalEvent = null;\r\n            if (partialEvent && (eventData === null || eventData === void 0 ? void 0 : eventData['url'])) {\r\n                finalEvent = _eventFromPartialAndUrl(partialEvent, eventData['url']);\r\n            }\r\n            // If finalEvent is never filled, trigger with no event\r\n            manager.onEvent(finalEvent || generateNoEvent());\r\n        };\r\n        // Universal links subscriber doesn't exist for iOS, so we need to check\r\n        if (typeof universalLinks !== 'undefined' &&\r\n            typeof universalLinks.subscribe === 'function') {\r\n            universalLinks.subscribe(null, universalLinksCb);\r\n        }\r\n        // iOS 7 or 8 custom URL schemes.\r\n        // This is also the current default behavior for iOS 9+.\r\n        // For this to work, cordova-plugin-customurlscheme needs to be installed.\r\n        // https://github.com/EddyVerbruggen/Custom-URL-scheme\r\n        // Do not overwrite the existing developer's URL handler.\r\n        const existingHandleOpenURL = handleOpenURL;\r\n        const packagePrefix = `${BuildInfo.packageName.toLowerCase()}://`;\r\n        _cordovaWindow().handleOpenURL = async (url) => {\r\n            if (url.toLowerCase().startsWith(packagePrefix)) {\r\n                // We want this intentionally to float\r\n                // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n                universalLinksCb({ url });\r\n            }\r\n            // Call the developer's handler if it is present.\r\n            if (typeof existingHandleOpenURL === 'function') {\r\n                try {\r\n                    existingHandleOpenURL(url);\r\n                }\r\n                catch (e) {\r\n                    // This is a developer error. Don't stop the flow of the SDK.\r\n                    console.error(e);\r\n                }\r\n            }\r\n        };\r\n    }\r\n}\r\n/**\r\n * An implementation of {@link PopupRedirectResolver} suitable for Cordova\r\n * based applications.\r\n *\r\n * @public\r\n */\r\nconst cordovaPopupRedirectResolver = CordovaPopupRedirectResolver;\r\nfunction generateNoEvent() {\r\n    return {\r\n        type: \"unknown\" /* UNKNOWN */,\r\n        eventId: null,\r\n        sessionId: null,\r\n        urlResponse: null,\r\n        postBody: null,\r\n        tenantId: null,\r\n        error: _createError(\"no-auth-event\" /* NO_AUTH_EVENT */)\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// This function should only be called by frameworks (e.g. FirebaseUI-web) to log their usage.\r\n// It is not intended for direct use by developer apps. NO jsdoc here to intentionally leave it out\r\n// of autogenerated documentation pages to reduce accidental misuse.\r\nfunction addFrameworkForLogging(auth, framework) {\r\n    _castAuth(auth)._logFramework(framework);\r\n}\n\nexport { addFrameworkForLogging, cordovaPopupRedirectResolver };\n//# sourceMappingURL=internal.js.map\n","import firebase from '@firebase/app-compat';\nimport * as exp from '@firebase/auth/internal';\nimport { Component } from '@firebase/component';\nimport { isBrowserExtension, isReactNative, isNode, getUA, isIE, isIndexedDBAvailable, FirebaseError } from '@firebase/util';\n\nvar name = \"@firebase/auth-compat\";\nvar version = \"0.2.16\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst CORDOVA_ONDEVICEREADY_TIMEOUT_MS = 1000;\r\nfunction _getCurrentScheme() {\r\n    var _a;\r\n    return ((_a = self === null || self === void 0 ? void 0 : self.location) === null || _a === void 0 ? void 0 : _a.protocol) || null;\r\n}\r\n/**\r\n * @return {boolean} Whether the current environment is http or https.\r\n */\r\nfunction _isHttpOrHttps() {\r\n    return _getCurrentScheme() === 'http:' || _getCurrentScheme() === 'https:';\r\n}\r\n/**\r\n * @param {?string=} ua The user agent.\r\n * @return {boolean} Whether the app is rendered in a mobile iOS or Android\r\n *     Cordova environment.\r\n */\r\nfunction _isAndroidOrIosCordovaScheme(ua = getUA()) {\r\n    return !!((_getCurrentScheme() === 'file:' ||\r\n        _getCurrentScheme() === 'ionic:' ||\r\n        _getCurrentScheme() === 'capacitor:') &&\r\n        ua.toLowerCase().match(/iphone|ipad|ipod|android/));\r\n}\r\n/**\r\n * @return {boolean} Whether the environment is a native environment, where\r\n *     CORS checks do not apply.\r\n */\r\nfunction _isNativeEnvironment() {\r\n    return isReactNative() || isNode();\r\n}\r\n/**\r\n * Checks whether the user agent is IE11.\r\n * @return {boolean} True if it is IE11.\r\n */\r\nfunction _isIe11() {\r\n    return isIE() && (document === null || document === void 0 ? void 0 : document.documentMode) === 11;\r\n}\r\n/**\r\n * Checks whether the user agent is Edge.\r\n * @param {string} userAgent The browser user agent string.\r\n * @return {boolean} True if it is Edge.\r\n */\r\nfunction _isEdge(ua = getUA()) {\r\n    return /Edge\\/\\d+/.test(ua);\r\n}\r\n/**\r\n * @param {?string=} opt_userAgent The navigator user agent.\r\n * @return {boolean} Whether local storage is not synchronized between an iframe\r\n *     and a popup of the same domain.\r\n */\r\nfunction _isLocalStorageNotSynchronized(ua = getUA()) {\r\n    return _isIe11() || _isEdge(ua);\r\n}\r\n/** @return {boolean} Whether web storage is supported. */\r\nfunction _isWebStorageSupported() {\r\n    try {\r\n        const storage = self.localStorage;\r\n        const key = exp._generateEventId();\r\n        if (storage) {\r\n            // setItem will throw an exception if we cannot access WebStorage (e.g.,\r\n            // Safari in private mode).\r\n            storage['setItem'](key, '1');\r\n            storage['removeItem'](key);\r\n            // For browsers where iframe web storage does not synchronize with a popup\r\n            // of the same domain, indexedDB is used for persistent storage. These\r\n            // browsers include IE11 and Edge.\r\n            // Make sure it is supported (IE11 and Edge private mode does not support\r\n            // that).\r\n            if (_isLocalStorageNotSynchronized()) {\r\n                // In such browsers, if indexedDB is not supported, an iframe cannot be\r\n                // notified of the popup sign in result.\r\n                return isIndexedDBAvailable();\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n    catch (e) {\r\n        // localStorage is not available from a worker. Test availability of\r\n        // indexedDB.\r\n        return _isWorker() && isIndexedDBAvailable();\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @param {?Object=} global The optional global scope.\r\n * @return {boolean} Whether current environment is a worker.\r\n */\r\nfunction _isWorker() {\r\n    // WorkerGlobalScope only defined in worker environment.\r\n    return (typeof global !== 'undefined' &&\r\n        'WorkerGlobalScope' in global &&\r\n        'importScripts' in global);\r\n}\r\nfunction _isPopupRedirectSupported() {\r\n    return ((_isHttpOrHttps() ||\r\n        isBrowserExtension() ||\r\n        _isAndroidOrIosCordovaScheme()) &&\r\n        // React Native with remote debugging reports its location.protocol as\r\n        // http.\r\n        !_isNativeEnvironment() &&\r\n        // Local storage has to be supported for browser popup and redirect\r\n        // operations to work.\r\n        _isWebStorageSupported() &&\r\n        // DOM, popups and redirects are not supported within a worker.\r\n        !_isWorker());\r\n}\r\n/** Quick check that indicates the platform *may* be Cordova */\r\nfunction _isLikelyCordova() {\r\n    return _isAndroidOrIosCordovaScheme() && typeof document !== 'undefined';\r\n}\r\nasync function _isCordova() {\r\n    if (!_isLikelyCordova()) {\r\n        return false;\r\n    }\r\n    return new Promise(resolve => {\r\n        const timeoutId = setTimeout(() => {\r\n            // We've waited long enough; the telltale Cordova event didn't happen\r\n            resolve(false);\r\n        }, CORDOVA_ONDEVICEREADY_TIMEOUT_MS);\r\n        document.addEventListener('deviceready', () => {\r\n            clearTimeout(timeoutId);\r\n            resolve(true);\r\n        });\r\n    });\r\n}\r\nfunction _getSelfWindow() {\r\n    return typeof window !== 'undefined' ? window : null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst Persistence = {\r\n    LOCAL: 'local',\r\n    NONE: 'none',\r\n    SESSION: 'session'\r\n};\r\nconst _assert$3 = exp._assert;\r\nconst PERSISTENCE_KEY = 'persistence';\r\n/**\r\n * Validates that an argument is a valid persistence value. If an invalid type\r\n * is specified, an error is thrown synchronously.\r\n */\r\nfunction _validatePersistenceArgument(auth, persistence) {\r\n    _assert$3(Object.values(Persistence).includes(persistence), auth, \"invalid-persistence-type\" /* INVALID_PERSISTENCE */);\r\n    // Validate if the specified type is supported in the current environment.\r\n    if (isReactNative()) {\r\n        // This is only supported in a browser.\r\n        _assert$3(persistence !== Persistence.SESSION, auth, \"unsupported-persistence-type\" /* UNSUPPORTED_PERSISTENCE */);\r\n        return;\r\n    }\r\n    if (isNode()) {\r\n        // Only none is supported in Node.js.\r\n        _assert$3(persistence === Persistence.NONE, auth, \"unsupported-persistence-type\" /* UNSUPPORTED_PERSISTENCE */);\r\n        return;\r\n    }\r\n    if (_isWorker()) {\r\n        // In a worker environment, either LOCAL or NONE are supported.\r\n        // If indexedDB not supported and LOCAL provided, throw an error\r\n        _assert$3(persistence === Persistence.NONE ||\r\n            (persistence === Persistence.LOCAL && isIndexedDBAvailable()), auth, \"unsupported-persistence-type\" /* UNSUPPORTED_PERSISTENCE */);\r\n        return;\r\n    }\r\n    // This is restricted by what the browser supports.\r\n    _assert$3(persistence === Persistence.NONE || _isWebStorageSupported(), auth, \"unsupported-persistence-type\" /* UNSUPPORTED_PERSISTENCE */);\r\n}\r\nasync function _savePersistenceForRedirect(auth) {\r\n    await auth._initializationPromise;\r\n    const session = getSessionStorageIfAvailable();\r\n    const key = exp._persistenceKeyName(PERSISTENCE_KEY, auth.config.apiKey, auth.name);\r\n    if (session) {\r\n        session.setItem(key, auth._getPersistence());\r\n    }\r\n}\r\nfunction _getPersistencesFromRedirect(apiKey, appName) {\r\n    const session = getSessionStorageIfAvailable();\r\n    if (!session) {\r\n        return [];\r\n    }\r\n    const key = exp._persistenceKeyName(PERSISTENCE_KEY, apiKey, appName);\r\n    const persistence = session.getItem(key);\r\n    switch (persistence) {\r\n        case Persistence.NONE:\r\n            return [exp.inMemoryPersistence];\r\n        case Persistence.LOCAL:\r\n            return [exp.indexedDBLocalPersistence, exp.browserSessionPersistence];\r\n        case Persistence.SESSION:\r\n            return [exp.browserSessionPersistence];\r\n        default:\r\n            return [];\r\n    }\r\n}\r\n/** Returns session storage, or null if the property access errors */\r\nfunction getSessionStorageIfAvailable() {\r\n    var _a;\r\n    try {\r\n        return ((_a = _getSelfWindow()) === null || _a === void 0 ? void 0 : _a.sessionStorage) || null;\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst _assert$2 = exp._assert;\r\n/** Platform-agnostic popup-redirect resolver */\r\nclass CompatPopupRedirectResolver {\r\n    constructor() {\r\n        // Create both resolvers for dynamic resolution later\r\n        this.browserResolver = exp._getInstance(exp.browserPopupRedirectResolver);\r\n        this.cordovaResolver = exp._getInstance(exp.cordovaPopupRedirectResolver);\r\n        // The actual resolver in use: either browserResolver or cordovaResolver.\r\n        this.underlyingResolver = null;\r\n        this._redirectPersistence = exp.browserSessionPersistence;\r\n        this._completeRedirectFn = exp._getRedirectResult;\r\n        this._overrideRedirectResult = exp._overrideRedirectResult;\r\n    }\r\n    async _initialize(auth) {\r\n        await this.selectUnderlyingResolver();\r\n        return this.assertedUnderlyingResolver._initialize(auth);\r\n    }\r\n    async _openPopup(auth, provider, authType, eventId) {\r\n        await this.selectUnderlyingResolver();\r\n        return this.assertedUnderlyingResolver._openPopup(auth, provider, authType, eventId);\r\n    }\r\n    async _openRedirect(auth, provider, authType, eventId) {\r\n        await this.selectUnderlyingResolver();\r\n        return this.assertedUnderlyingResolver._openRedirect(auth, provider, authType, eventId);\r\n    }\r\n    _isIframeWebStorageSupported(auth, cb) {\r\n        this.assertedUnderlyingResolver._isIframeWebStorageSupported(auth, cb);\r\n    }\r\n    _originValidation(auth) {\r\n        return this.assertedUnderlyingResolver._originValidation(auth);\r\n    }\r\n    get _shouldInitProactively() {\r\n        return _isLikelyCordova() || this.browserResolver._shouldInitProactively;\r\n    }\r\n    get assertedUnderlyingResolver() {\r\n        _assert$2(this.underlyingResolver, \"internal-error\" /* INTERNAL_ERROR */);\r\n        return this.underlyingResolver;\r\n    }\r\n    async selectUnderlyingResolver() {\r\n        if (this.underlyingResolver) {\r\n            return;\r\n        }\r\n        // We haven't yet determined whether or not we're in Cordova; go ahead\r\n        // and determine that state now.\r\n        const isCordova = await _isCordova();\r\n        this.underlyingResolver = isCordova\r\n            ? this.cordovaResolver\r\n            : this.browserResolver;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction unwrap(object) {\r\n    return object.unwrap();\r\n}\r\nfunction wrapped(object) {\r\n    return object.wrapped();\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction credentialFromResponse(userCredential) {\r\n    return credentialFromObject(userCredential);\r\n}\r\nfunction attachExtraErrorFields(auth, e) {\r\n    var _a;\r\n    // The response contains all fields from the server which may or may not\r\n    // actually match the underlying type\r\n    const response = (_a = e.customData) === null || _a === void 0 ? void 0 : _a._tokenResponse;\r\n    if (e.code === 'auth/multi-factor-auth-required') {\r\n        const mfaErr = e;\r\n        mfaErr.resolver = new MultiFactorResolver(auth, exp.getMultiFactorResolver(auth, e));\r\n    }\r\n    else if (response) {\r\n        const credential = credentialFromObject(e);\r\n        const credErr = e;\r\n        if (credential) {\r\n            credErr.credential = credential;\r\n            credErr.tenantId = response.tenantId || undefined;\r\n            credErr.email = response.email || undefined;\r\n            credErr.phoneNumber = response.phoneNumber || undefined;\r\n        }\r\n    }\r\n}\r\nfunction credentialFromObject(object) {\r\n    const { _tokenResponse } = (object instanceof FirebaseError ? object.customData : object);\r\n    if (!_tokenResponse) {\r\n        return null;\r\n    }\r\n    // Handle phone Auth credential responses, as they have a different format\r\n    // from other backend responses (i.e. no providerId). This is also only the\r\n    // case for user credentials (does not work for errors).\r\n    if (!(object instanceof FirebaseError)) {\r\n        if ('temporaryProof' in _tokenResponse && 'phoneNumber' in _tokenResponse) {\r\n            return exp.PhoneAuthProvider.credentialFromResult(object);\r\n        }\r\n    }\r\n    const providerId = _tokenResponse.providerId;\r\n    // Email and password is not supported as there is no situation where the\r\n    // server would return the password to the client.\r\n    if (!providerId || providerId === exp.ProviderId.PASSWORD) {\r\n        return null;\r\n    }\r\n    let provider;\r\n    switch (providerId) {\r\n        case exp.ProviderId.GOOGLE:\r\n            provider = exp.GoogleAuthProvider;\r\n            break;\r\n        case exp.ProviderId.FACEBOOK:\r\n            provider = exp.FacebookAuthProvider;\r\n            break;\r\n        case exp.ProviderId.GITHUB:\r\n            provider = exp.GithubAuthProvider;\r\n            break;\r\n        case exp.ProviderId.TWITTER:\r\n            provider = exp.TwitterAuthProvider;\r\n            break;\r\n        default:\r\n            const { oauthIdToken, oauthAccessToken, oauthTokenSecret, pendingToken, nonce } = _tokenResponse;\r\n            if (!oauthAccessToken &&\r\n                !oauthTokenSecret &&\r\n                !oauthIdToken &&\r\n                !pendingToken) {\r\n                return null;\r\n            }\r\n            // TODO(avolkovi): uncomment this and get it working with SAML & OIDC\r\n            if (pendingToken) {\r\n                if (providerId.startsWith('saml.')) {\r\n                    return exp.SAMLAuthCredential._create(providerId, pendingToken);\r\n                }\r\n                else {\r\n                    // OIDC and non-default providers excluding Twitter.\r\n                    return exp.OAuthCredential._fromParams({\r\n                        providerId,\r\n                        signInMethod: providerId,\r\n                        pendingToken,\r\n                        idToken: oauthIdToken,\r\n                        accessToken: oauthAccessToken\r\n                    });\r\n                }\r\n            }\r\n            return new exp.OAuthProvider(providerId).credential({\r\n                idToken: oauthIdToken,\r\n                accessToken: oauthAccessToken,\r\n                rawNonce: nonce\r\n            });\r\n    }\r\n    return object instanceof FirebaseError\r\n        ? provider.credentialFromError(object)\r\n        : provider.credentialFromResult(object);\r\n}\r\nfunction convertCredential(auth, credentialPromise) {\r\n    return credentialPromise\r\n        .catch(e => {\r\n        if (e instanceof FirebaseError) {\r\n            attachExtraErrorFields(auth, e);\r\n        }\r\n        throw e;\r\n    })\r\n        .then(credential => {\r\n        const operationType = credential.operationType;\r\n        const user = credential.user;\r\n        return {\r\n            operationType,\r\n            credential: credentialFromResponse(credential),\r\n            additionalUserInfo: exp.getAdditionalUserInfo(credential),\r\n            user: User.getOrCreate(user)\r\n        };\r\n    });\r\n}\r\nasync function convertConfirmationResult(auth, confirmationResultPromise) {\r\n    const confirmationResultExp = await confirmationResultPromise;\r\n    return {\r\n        verificationId: confirmationResultExp.verificationId,\r\n        confirm: (verificationCode) => convertCredential(auth, confirmationResultExp.confirm(verificationCode))\r\n    };\r\n}\r\nclass MultiFactorResolver {\r\n    constructor(auth, resolver) {\r\n        this.resolver = resolver;\r\n        this.auth = wrapped(auth);\r\n    }\r\n    get session() {\r\n        return this.resolver.session;\r\n    }\r\n    get hints() {\r\n        return this.resolver.hints;\r\n    }\r\n    resolveSignIn(assertion) {\r\n        return convertCredential(unwrap(this.auth), this.resolver.resolveSignIn(assertion));\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass User {\r\n    constructor(_delegate) {\r\n        this._delegate = _delegate;\r\n        this.multiFactor = exp.multiFactor(_delegate);\r\n    }\r\n    static getOrCreate(user) {\r\n        if (!User.USER_MAP.has(user)) {\r\n            User.USER_MAP.set(user, new User(user));\r\n        }\r\n        return User.USER_MAP.get(user);\r\n    }\r\n    delete() {\r\n        return this._delegate.delete();\r\n    }\r\n    reload() {\r\n        return this._delegate.reload();\r\n    }\r\n    toJSON() {\r\n        return this._delegate.toJSON();\r\n    }\r\n    getIdTokenResult(forceRefresh) {\r\n        return this._delegate.getIdTokenResult(forceRefresh);\r\n    }\r\n    getIdToken(forceRefresh) {\r\n        return this._delegate.getIdToken(forceRefresh);\r\n    }\r\n    linkAndRetrieveDataWithCredential(credential) {\r\n        return this.linkWithCredential(credential);\r\n    }\r\n    async linkWithCredential(credential) {\r\n        return convertCredential(this.auth, exp.linkWithCredential(this._delegate, credential));\r\n    }\r\n    async linkWithPhoneNumber(phoneNumber, applicationVerifier) {\r\n        return convertConfirmationResult(this.auth, exp.linkWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier));\r\n    }\r\n    async linkWithPopup(provider) {\r\n        return convertCredential(this.auth, exp.linkWithPopup(this._delegate, provider, CompatPopupRedirectResolver));\r\n    }\r\n    async linkWithRedirect(provider) {\r\n        await _savePersistenceForRedirect(exp._castAuth(this.auth));\r\n        return exp.linkWithRedirect(this._delegate, provider, CompatPopupRedirectResolver);\r\n    }\r\n    reauthenticateAndRetrieveDataWithCredential(credential) {\r\n        return this.reauthenticateWithCredential(credential);\r\n    }\r\n    async reauthenticateWithCredential(credential) {\r\n        return convertCredential(this.auth, exp.reauthenticateWithCredential(this._delegate, credential));\r\n    }\r\n    reauthenticateWithPhoneNumber(phoneNumber, applicationVerifier) {\r\n        return convertConfirmationResult(this.auth, exp.reauthenticateWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier));\r\n    }\r\n    reauthenticateWithPopup(provider) {\r\n        return convertCredential(this.auth, exp.reauthenticateWithPopup(this._delegate, provider, CompatPopupRedirectResolver));\r\n    }\r\n    async reauthenticateWithRedirect(provider) {\r\n        await _savePersistenceForRedirect(exp._castAuth(this.auth));\r\n        return exp.reauthenticateWithRedirect(this._delegate, provider, CompatPopupRedirectResolver);\r\n    }\r\n    sendEmailVerification(actionCodeSettings) {\r\n        return exp.sendEmailVerification(this._delegate, actionCodeSettings);\r\n    }\r\n    async unlink(providerId) {\r\n        await exp.unlink(this._delegate, providerId);\r\n        return this;\r\n    }\r\n    updateEmail(newEmail) {\r\n        return exp.updateEmail(this._delegate, newEmail);\r\n    }\r\n    updatePassword(newPassword) {\r\n        return exp.updatePassword(this._delegate, newPassword);\r\n    }\r\n    updatePhoneNumber(phoneCredential) {\r\n        return exp.updatePhoneNumber(this._delegate, phoneCredential);\r\n    }\r\n    updateProfile(profile) {\r\n        return exp.updateProfile(this._delegate, profile);\r\n    }\r\n    verifyBeforeUpdateEmail(newEmail, actionCodeSettings) {\r\n        return exp.verifyBeforeUpdateEmail(this._delegate, newEmail, actionCodeSettings);\r\n    }\r\n    get emailVerified() {\r\n        return this._delegate.emailVerified;\r\n    }\r\n    get isAnonymous() {\r\n        return this._delegate.isAnonymous;\r\n    }\r\n    get metadata() {\r\n        return this._delegate.metadata;\r\n    }\r\n    get phoneNumber() {\r\n        return this._delegate.phoneNumber;\r\n    }\r\n    get providerData() {\r\n        return this._delegate.providerData;\r\n    }\r\n    get refreshToken() {\r\n        return this._delegate.refreshToken;\r\n    }\r\n    get tenantId() {\r\n        return this._delegate.tenantId;\r\n    }\r\n    get displayName() {\r\n        return this._delegate.displayName;\r\n    }\r\n    get email() {\r\n        return this._delegate.email;\r\n    }\r\n    get photoURL() {\r\n        return this._delegate.photoURL;\r\n    }\r\n    get providerId() {\r\n        return this._delegate.providerId;\r\n    }\r\n    get uid() {\r\n        return this._delegate.uid;\r\n    }\r\n    get auth() {\r\n        return this._delegate.auth;\r\n    }\r\n}\r\n// Maintain a map so that there's always a 1:1 mapping between new User and\r\n// legacy compat users\r\nUser.USER_MAP = new WeakMap();\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst _assert$1 = exp._assert;\r\nclass Auth {\r\n    constructor(app, provider) {\r\n        this.app = app;\r\n        if (provider.isInitialized()) {\r\n            this._delegate = provider.getImmediate();\r\n            this.linkUnderlyingAuth();\r\n            return;\r\n        }\r\n        const { apiKey } = app.options;\r\n        // TODO: platform needs to be determined using heuristics\r\n        _assert$1(apiKey, \"invalid-api-key\" /* INVALID_API_KEY */, {\r\n            appName: app.name\r\n        });\r\n        // TODO: platform needs to be determined using heuristics\r\n        _assert$1(apiKey, \"invalid-api-key\" /* INVALID_API_KEY */, {\r\n            appName: app.name\r\n        });\r\n        // Only use a popup/redirect resolver in browser environments\r\n        const resolver = typeof window !== 'undefined' ? CompatPopupRedirectResolver : undefined;\r\n        this._delegate = provider.initialize({\r\n            options: {\r\n                persistence: buildPersistenceHierarchy(apiKey, app.name),\r\n                popupRedirectResolver: resolver\r\n            }\r\n        });\r\n        this._delegate._updateErrorMap(exp.debugErrorMap);\r\n        this.linkUnderlyingAuth();\r\n    }\r\n    get emulatorConfig() {\r\n        return this._delegate.emulatorConfig;\r\n    }\r\n    get currentUser() {\r\n        if (!this._delegate.currentUser) {\r\n            return null;\r\n        }\r\n        return User.getOrCreate(this._delegate.currentUser);\r\n    }\r\n    get languageCode() {\r\n        return this._delegate.languageCode;\r\n    }\r\n    set languageCode(languageCode) {\r\n        this._delegate.languageCode = languageCode;\r\n    }\r\n    get settings() {\r\n        return this._delegate.settings;\r\n    }\r\n    get tenantId() {\r\n        return this._delegate.tenantId;\r\n    }\r\n    set tenantId(tid) {\r\n        this._delegate.tenantId = tid;\r\n    }\r\n    useDeviceLanguage() {\r\n        this._delegate.useDeviceLanguage();\r\n    }\r\n    signOut() {\r\n        return this._delegate.signOut();\r\n    }\r\n    useEmulator(url, options) {\r\n        exp.connectAuthEmulator(this._delegate, url, options);\r\n    }\r\n    applyActionCode(code) {\r\n        return exp.applyActionCode(this._delegate, code);\r\n    }\r\n    checkActionCode(code) {\r\n        return exp.checkActionCode(this._delegate, code);\r\n    }\r\n    confirmPasswordReset(code, newPassword) {\r\n        return exp.confirmPasswordReset(this._delegate, code, newPassword);\r\n    }\r\n    async createUserWithEmailAndPassword(email, password) {\r\n        return convertCredential(this._delegate, exp.createUserWithEmailAndPassword(this._delegate, email, password));\r\n    }\r\n    fetchProvidersForEmail(email) {\r\n        return this.fetchSignInMethodsForEmail(email);\r\n    }\r\n    fetchSignInMethodsForEmail(email) {\r\n        return exp.fetchSignInMethodsForEmail(this._delegate, email);\r\n    }\r\n    isSignInWithEmailLink(emailLink) {\r\n        return exp.isSignInWithEmailLink(this._delegate, emailLink);\r\n    }\r\n    async getRedirectResult() {\r\n        _assert$1(_isPopupRedirectSupported(), this._delegate, \"operation-not-supported-in-this-environment\" /* OPERATION_NOT_SUPPORTED */);\r\n        const credential = await exp.getRedirectResult(this._delegate, CompatPopupRedirectResolver);\r\n        if (!credential) {\r\n            return {\r\n                credential: null,\r\n                user: null\r\n            };\r\n        }\r\n        return convertCredential(this._delegate, Promise.resolve(credential));\r\n    }\r\n    // This function should only be called by frameworks (e.g. FirebaseUI-web) to log their usage.\r\n    // It is not intended for direct use by developer apps. NO jsdoc here to intentionally leave it\r\n    // out of autogenerated documentation pages to reduce accidental misuse.\r\n    addFrameworkForLogging(framework) {\r\n        exp.addFrameworkForLogging(this._delegate, framework);\r\n    }\r\n    onAuthStateChanged(nextOrObserver, errorFn, completed) {\r\n        const { next, error, complete } = wrapObservers(nextOrObserver, errorFn, completed);\r\n        return this._delegate.onAuthStateChanged(next, error, complete);\r\n    }\r\n    onIdTokenChanged(nextOrObserver, errorFn, completed) {\r\n        const { next, error, complete } = wrapObservers(nextOrObserver, errorFn, completed);\r\n        return this._delegate.onIdTokenChanged(next, error, complete);\r\n    }\r\n    sendSignInLinkToEmail(email, actionCodeSettings) {\r\n        return exp.sendSignInLinkToEmail(this._delegate, email, actionCodeSettings);\r\n    }\r\n    sendPasswordResetEmail(email, actionCodeSettings) {\r\n        return exp.sendPasswordResetEmail(this._delegate, email, actionCodeSettings || undefined);\r\n    }\r\n    async setPersistence(persistence) {\r\n        _validatePersistenceArgument(this._delegate, persistence);\r\n        let converted;\r\n        switch (persistence) {\r\n            case Persistence.SESSION:\r\n                converted = exp.browserSessionPersistence;\r\n                break;\r\n            case Persistence.LOCAL:\r\n                // Not using isIndexedDBAvailable() since it only checks if indexedDB is defined.\r\n                const isIndexedDBFullySupported = await exp\r\n                    ._getInstance(exp.indexedDBLocalPersistence)\r\n                    ._isAvailable();\r\n                converted = isIndexedDBFullySupported\r\n                    ? exp.indexedDBLocalPersistence\r\n                    : exp.browserLocalPersistence;\r\n                break;\r\n            case Persistence.NONE:\r\n                converted = exp.inMemoryPersistence;\r\n                break;\r\n            default:\r\n                return exp._fail(\"argument-error\" /* ARGUMENT_ERROR */, {\r\n                    appName: this._delegate.name\r\n                });\r\n        }\r\n        return this._delegate.setPersistence(converted);\r\n    }\r\n    signInAndRetrieveDataWithCredential(credential) {\r\n        return this.signInWithCredential(credential);\r\n    }\r\n    signInAnonymously() {\r\n        return convertCredential(this._delegate, exp.signInAnonymously(this._delegate));\r\n    }\r\n    signInWithCredential(credential) {\r\n        return convertCredential(this._delegate, exp.signInWithCredential(this._delegate, credential));\r\n    }\r\n    signInWithCustomToken(token) {\r\n        return convertCredential(this._delegate, exp.signInWithCustomToken(this._delegate, token));\r\n    }\r\n    signInWithEmailAndPassword(email, password) {\r\n        return convertCredential(this._delegate, exp.signInWithEmailAndPassword(this._delegate, email, password));\r\n    }\r\n    signInWithEmailLink(email, emailLink) {\r\n        return convertCredential(this._delegate, exp.signInWithEmailLink(this._delegate, email, emailLink));\r\n    }\r\n    signInWithPhoneNumber(phoneNumber, applicationVerifier) {\r\n        return convertConfirmationResult(this._delegate, exp.signInWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier));\r\n    }\r\n    async signInWithPopup(provider) {\r\n        _assert$1(_isPopupRedirectSupported(), this._delegate, \"operation-not-supported-in-this-environment\" /* OPERATION_NOT_SUPPORTED */);\r\n        return convertCredential(this._delegate, exp.signInWithPopup(this._delegate, provider, CompatPopupRedirectResolver));\r\n    }\r\n    async signInWithRedirect(provider) {\r\n        _assert$1(_isPopupRedirectSupported(), this._delegate, \"operation-not-supported-in-this-environment\" /* OPERATION_NOT_SUPPORTED */);\r\n        await _savePersistenceForRedirect(this._delegate);\r\n        return exp.signInWithRedirect(this._delegate, provider, CompatPopupRedirectResolver);\r\n    }\r\n    updateCurrentUser(user) {\r\n        // remove ts-ignore once overloads are defined for exp functions to accept compat objects\r\n        // @ts-ignore\r\n        return this._delegate.updateCurrentUser(user);\r\n    }\r\n    verifyPasswordResetCode(code) {\r\n        return exp.verifyPasswordResetCode(this._delegate, code);\r\n    }\r\n    unwrap() {\r\n        return this._delegate;\r\n    }\r\n    _delete() {\r\n        return this._delegate._delete();\r\n    }\r\n    linkUnderlyingAuth() {\r\n        this._delegate.wrapped = () => this;\r\n    }\r\n}\r\nAuth.Persistence = Persistence;\r\nfunction wrapObservers(nextOrObserver, error, complete) {\r\n    let next = nextOrObserver;\r\n    if (typeof nextOrObserver !== 'function') {\r\n        ({ next, error, complete } = nextOrObserver);\r\n    }\r\n    // We know 'next' is now a function\r\n    const oldNext = next;\r\n    const newNext = (user) => oldNext(user && User.getOrCreate(user));\r\n    return {\r\n        next: newNext,\r\n        error: error,\r\n        complete\r\n    };\r\n}\r\nfunction buildPersistenceHierarchy(apiKey, appName) {\r\n    // Note this is slightly different behavior: in this case, the stored\r\n    // persistence is checked *first* rather than last. This is because we want\r\n    // to prefer stored persistence type in the hierarchy. This is an empty\r\n    // array if window is not available or there is no pending redirect\r\n    const persistences = _getPersistencesFromRedirect(apiKey, appName);\r\n    // If \"self\" is available, add indexedDB\r\n    if (typeof self !== 'undefined' &&\r\n        !persistences.includes(exp.indexedDBLocalPersistence)) {\r\n        persistences.push(exp.indexedDBLocalPersistence);\r\n    }\r\n    // If \"window\" is available, add HTML Storage persistences\r\n    if (typeof window !== 'undefined') {\r\n        for (const persistence of [\r\n            exp.browserLocalPersistence,\r\n            exp.browserSessionPersistence\r\n        ]) {\r\n            if (!persistences.includes(persistence)) {\r\n                persistences.push(persistence);\r\n            }\r\n        }\r\n    }\r\n    // Add in-memory as a final fallback\r\n    if (!persistences.includes(exp.inMemoryPersistence)) {\r\n        persistences.push(exp.inMemoryPersistence);\r\n    }\r\n    return persistences;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass PhoneAuthProvider {\r\n    constructor() {\r\n        this.providerId = 'phone';\r\n        // TODO: remove ts-ignore when moving types from auth-types to auth-compat\r\n        // @ts-ignore\r\n        this._delegate = new exp.PhoneAuthProvider(unwrap(firebase.auth()));\r\n    }\r\n    static credential(verificationId, verificationCode) {\r\n        return exp.PhoneAuthProvider.credential(verificationId, verificationCode);\r\n    }\r\n    verifyPhoneNumber(phoneInfoOptions, applicationVerifier) {\r\n        return this._delegate.verifyPhoneNumber(\r\n        // The implementation matches but the types are subtly incompatible\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        phoneInfoOptions, applicationVerifier);\r\n    }\r\n    unwrap() {\r\n        return this._delegate;\r\n    }\r\n}\r\nPhoneAuthProvider.PHONE_SIGN_IN_METHOD = exp.PhoneAuthProvider.PHONE_SIGN_IN_METHOD;\r\nPhoneAuthProvider.PROVIDER_ID = exp.PhoneAuthProvider.PROVIDER_ID;\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst _assert = exp._assert;\r\nclass RecaptchaVerifier {\r\n    constructor(container, parameters, app = firebase.app()) {\r\n        var _a;\r\n        // API key is required for web client RPC calls.\r\n        _assert((_a = app.options) === null || _a === void 0 ? void 0 : _a.apiKey, \"invalid-api-key\" /* INVALID_API_KEY */, {\r\n            appName: app.name\r\n        });\r\n        this._delegate = new exp.RecaptchaVerifier(container, \r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        parameters, \r\n        // TODO: remove ts-ignore when moving types from auth-types to auth-compat\r\n        // @ts-ignore\r\n        app.auth());\r\n        this.type = this._delegate.type;\r\n    }\r\n    clear() {\r\n        this._delegate.clear();\r\n    }\r\n    render() {\r\n        return this._delegate.render();\r\n    }\r\n    verify() {\r\n        return this._delegate.verify();\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst AUTH_TYPE = 'auth-compat';\r\n// Create auth components to register with firebase.\r\n// Provides Auth public APIs.\r\nfunction registerAuthCompat(instance) {\r\n    instance.INTERNAL.registerComponent(new Component(AUTH_TYPE, container => {\r\n        // getImmediate for FirebaseApp will always succeed\r\n        const app = container.getProvider('app-compat').getImmediate();\r\n        const authProvider = container.getProvider('auth');\r\n        return new Auth(app, authProvider);\r\n    }, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps({\r\n        ActionCodeInfo: {\r\n            Operation: {\r\n                EMAIL_SIGNIN: exp.ActionCodeOperation.EMAIL_SIGNIN,\r\n                PASSWORD_RESET: exp.ActionCodeOperation.PASSWORD_RESET,\r\n                RECOVER_EMAIL: exp.ActionCodeOperation.RECOVER_EMAIL,\r\n                REVERT_SECOND_FACTOR_ADDITION: exp.ActionCodeOperation.REVERT_SECOND_FACTOR_ADDITION,\r\n                VERIFY_AND_CHANGE_EMAIL: exp.ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL,\r\n                VERIFY_EMAIL: exp.ActionCodeOperation.VERIFY_EMAIL\r\n            }\r\n        },\r\n        EmailAuthProvider: exp.EmailAuthProvider,\r\n        FacebookAuthProvider: exp.FacebookAuthProvider,\r\n        GithubAuthProvider: exp.GithubAuthProvider,\r\n        GoogleAuthProvider: exp.GoogleAuthProvider,\r\n        OAuthProvider: exp.OAuthProvider,\r\n        SAMLAuthProvider: exp.SAMLAuthProvider,\r\n        PhoneAuthProvider: PhoneAuthProvider,\r\n        PhoneMultiFactorGenerator: exp.PhoneMultiFactorGenerator,\r\n        RecaptchaVerifier: RecaptchaVerifier,\r\n        TwitterAuthProvider: exp.TwitterAuthProvider,\r\n        Auth,\r\n        AuthCredential: exp.AuthCredential,\r\n        Error: FirebaseError\r\n    })\r\n        .setInstantiationMode(\"LAZY\" /* LAZY */)\r\n        .setMultipleInstances(false));\r\n    instance.registerVersion(name, version);\r\n}\r\nregisterAuthCompat(firebase);\n//# sourceMappingURL=index.esm2017.js.map\n"],"names":["FirebaseAppImpl","constructor","_delegate","firebase","this","_addComponent","container","automaticDataCollectionEnabled","val","name","options","delete","Promise","resolve","checkDestroyed","then","INTERNAL","removeApp","deleteApp","_getService","instanceIdentifier","_DEFAULT_ENTRY_NAME","_a","provider","getProvider","isInitialized","getComponent","instantiationMode","initialize","getImmediate","identifier","_removeServiceInstance","clearInstance","component","_addOrOverwriteComponent","toJSON","ERRORS","ERROR_FACTORY","createFirebaseNamespaceCore","firebaseAppImpl","apps","namespace","__esModule","initializeApp","initializeAppCompat","app","registerVersion","setLogLevel","onLog","SDK_VERSION","registerComponent","registerComponentCompat","useAsService","modularAPIs","create","appName","rawConfig","appCompat","getApps","Object","keys","map","componentName","componentNameWithoutCompat","replace","type","serviceNamespace","appArg","undefined","serviceProps","prototype","args","serviceFxn","bind","apply","multipleInstances","useService","defineProperty","get","createFirebaseNamespace","extendNamespace","props","assign","createSubscribe","ErrorFactory","deepExtend","firebase$1","logger","version","registerCoreComponents","variant","self","warn","sdkVersion","indexOf","_cordovaWindow","window","REDIRECT_TIMEOUT_MS","async","_generateHandlerUrl","auth","event","BuildInfo","sessionId","sessionDigest","computeSha256","additionalParams","packageName","displayName","eventId","_validateOrigin","request","iosBundleId","androidPackageName","_performRedirect","handlerUrl","cordova","plugins","browsertab","isAvailable","browserTabIsAvailable","iabRef","openUrl","InAppBrowser","open","_waitForAppResume","eventListener","cleanup","reject","onCloseTimer","authEventSeen","closeBrowserTab","close","resumed","setTimeout","visibilityChanged","document","visibilityState","addPassiveListener","addEventListener","removePassiveListener","removeEventListener","clearTimeout","_checkCordovaConfiguration","_b","_c","_d","_e","_f","_g","_h","_j","_k","win","universalLinks","subscribe","missingPlugin","bytes","stringToArrayBuffer","buf","crypto","subtle","digest","arr","Array","from","Uint8Array","num","toString","padStart","join","str","test","TextEncoder","encode","buff","ArrayBuffer","length","view","i","charCodeAt","SESSION_ID_LENGTH","CordovaAuthEventManager","super","arguments","passiveListeners","Set","initPromise","resolveInialized","cb","add","resetRedirect","queuedRedirectEvent","hasHandledPotentialRedirect","onEvent","forEach","_generateNewEvent","urlResponse","generateSessionId","postBody","tenantId","error","_savePartialEvent","storage","_set","persistenceKey","_getAndRemoveEvent","_get","_remove","_eventFromPartialAndUrl","partialEvent","url","callbackUrl","_getDeepLinkFromCallback","includes","params","searchParamsOrEmpty","errorObject","parseJsonOrNull","decodeURIComponent","code","split","chars","allowedChars","idx","Math","floor","random","push","charAt","b","config","apiKey","json","JSON","parse","e","link","doubleDeepLink","iOSDeepLink","iOSDoubleDeepLink","_","rest","INITIAL_EVENT_TIMEOUT_MS","CordovaPopupRedirectResolver","_redirectPersistence","_shouldInitProactively","eventManagers","Map","originValidationPromises","_completeRedirectFn","_overrideRedirectResult","key","_key","manager","set","attachCallbackListeners","_openPopup","authType","_initialize","initialized","_originValidation","_isIframeWebStorageSupported","_auth","_cb","Error","handleOpenURL","noEventTimeout","generateNoEvent","universalLinksCb","eventData","finalEvent","existingHandleOpenURL","packagePrefix","toLowerCase","startsWith","console","cordovaPopupRedirectResolver","addFrameworkForLogging","framework","_logFramework","CORDOVA_ONDEVICEREADY_TIMEOUT_MS","_getCurrentScheme","location","protocol","_isHttpOrHttps","_isAndroidOrIosCordovaScheme","ua","match","_isNativeEnvironment","_isIe11","documentMode","_isEdge","_isLocalStorageNotSynchronized","_isWebStorageSupported","localStorage","_isWorker","g","_isPopupRedirectSupported","_isLikelyCordova","_isCordova","timeoutId","_getSelfWindow","Persistence","LOCAL","NONE","SESSION","_assert$3","PERSISTENCE_KEY","_validatePersistenceArgument","persistence","values","_savePersistenceForRedirect","_initializationPromise","session","getSessionStorageIfAvailable","setItem","_getPersistence","_getPersistencesFromRedirect","getItem","sessionStorage","_assert$2","CompatPopupRedirectResolver","browserResolver","cordovaResolver","underlyingResolver","selectUnderlyingResolver","assertedUnderlyingResolver","_openRedirect","isCordova","unwrap","object","wrapped","credentialFromResponse","userCredential","credentialFromObject","attachExtraErrorFields","response","customData","_tokenResponse","mfaErr","resolver","MultiFactorResolver","credential","credErr","email","phoneNumber","providerId","oauthIdToken","oauthAccessToken","oauthTokenSecret","pendingToken","nonce","signInMethod","idToken","accessToken","rawNonce","credentialFromError","credentialFromResult","convertCredential","credentialPromise","catch","operationType","user","additionalUserInfo","User","getOrCreate","convertConfirmationResult","confirmationResultPromise","confirmationResultExp","verificationId","confirm","verificationCode","hints","resolveSignIn","assertion","multiFactor","static","USER_MAP","has","reload","getIdTokenResult","forceRefresh","getIdToken","linkAndRetrieveDataWithCredential","linkWithCredential","applicationVerifier","reauthenticateAndRetrieveDataWithCredential","reauthenticateWithCredential","reauthenticateWithPhoneNumber","reauthenticateWithPopup","sendEmailVerification","actionCodeSettings","updateEmail","newEmail","updatePassword","newPassword","updatePhoneNumber","phoneCredential","updateProfile","profile","verifyBeforeUpdateEmail","emailVerified","isAnonymous","metadata","providerData","refreshToken","photoURL","uid","WeakMap","_assert$1","Auth","linkUnderlyingAuth","buildPersistenceHierarchy","popupRedirectResolver","_updateErrorMap","emulatorConfig","currentUser","languageCode","settings","tid","useDeviceLanguage","signOut","useEmulator","applyActionCode","checkActionCode","confirmPasswordReset","password","fetchProvidersForEmail","fetchSignInMethodsForEmail","isSignInWithEmailLink","emailLink","onAuthStateChanged","nextOrObserver","errorFn","completed","next","complete","wrapObservers","onIdTokenChanged","sendSignInLinkToEmail","sendPasswordResetEmail","converted","isIndexedDBFullySupported","_isAvailable","setPersistence","signInAndRetrieveDataWithCredential","signInWithCredential","signInAnonymously","signInWithCustomToken","token","signInWithEmailAndPassword","signInWithEmailLink","signInWithPhoneNumber","updateCurrentUser","verifyPasswordResetCode","_delete","oldNext","newNext","persistences","PhoneAuthProvider","verifyPhoneNumber","phoneInfoOptions","PHONE_SIGN_IN_METHOD","PROVIDER_ID","_assert","RecaptchaVerifier","parameters","clear","render","verify","AUTH_TYPE","registerAuthCompat","instance","authProvider","setServiceProps","ActionCodeInfo","Operation","EMAIL_SIGNIN","PASSWORD_RESET","RECOVER_EMAIL","REVERT_SECOND_FACTOR_ADDITION","VERIFY_AND_CHANGE_EMAIL","VERIFY_EMAIL","EmailAuthProvider","FacebookAuthProvider","GithubAuthProvider","GoogleAuthProvider","OAuthProvider","SAMLAuthProvider","PhoneMultiFactorGenerator","TwitterAuthProvider","AuthCredential","setInstantiationMode","setMultipleInstances"],"sourceRoot":""}